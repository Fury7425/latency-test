name: Build Windows EXE (PyInstaller)

on:
  push:
    branches: [ main, master ]
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build EXE
        run: |
          pyinstaller --onefile --noconsole --name "LatencyLab-Modular" -p app app/main.py
          dir dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LatencyLab-Modular-${{ github.sha }}
          path: dist/LatencyLab-Modular.exe

  release:
    # Create a release when a tag like v0.1.0 is pushed
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: LatencyLab-Modular-${{ github.sha }}
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/LatencyLab-Modular.exe
          draft: false
          prerelease: false
